# Frontend config
upstream frontend_upstream {
	server frontend:3001;
}

server {
	client_max_body_size 25m;
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name habits.jakubsekula.com;

	add_header Access-Control-Allow-Origin *;
	location / {
		proxy_pass http://frontend_upstream;
	}
	
	# return 301 https://$host$request_uri;
}

# server {
# 	client_max_body_size 25m;
# 	listen 443 ssl default_server;
# 	server_name habits.jakubsekula.com;
# 	# ssl_certificate /etc/nginx/certificates/crux-local.crt;
# 	# ssl_certificate_key /etc/nginx/certificates/crux-local.key;
# 	add_header Access-Control-Allow-Origin *;

# 	server_tokens off;

# 	location / {
# 		proxy_pass http://frontend_upstream;
# 	}
# }

# Backend API config
upstream backend_upstream {
	server backend:3000;
}

server {
	listen 80;
	# ssl_certificate /etc/nginx/certificates/crux-local.crt;
	# ssl_certificate_key /etc/nginx/certificates/crux-local.key;
	server_name api.habits.jakubsekula.com;
	server_tokens off;
	

	location / {
		proxy_pass http://backend_upstream;
		# proxy_http_version 1.1;
		# proxy_set_header X-Forwarded-Host $host;
		# proxy_set_header X-Forwarded-Server $host;
		# proxy_set_header X-Real-IP $remote_addr;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection "Upgrade";
		# proxy_pass_request_headers on;
	}
}