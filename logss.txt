#1 [backend internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 transferring dockerfile: 687B 0.0s done
#1 DONE 0.1s

#2 [backend internal] load .dockerignore
#2 transferring context: 57B 0.0s done
#2 DONE 0.0s

#3 [backend internal] load metadata for docker.io/library/node:16-alpine
#3 DONE 0.7s

#4 [backend 1/9] FROM docker.io/library/node:16-alpine@sha256:6c381d5dc2a11dcdb693f0301e8587e43f440c90cdb8933eaaaabb905d44cdb9
#4 DONE 0.0s

#5 [backend internal] load build context
#5 transferring context: 202.13kB 0.0s done
#5 DONE 0.1s

#6 [backend 3/9] WORKDIR /home/app
#6 CACHED

#7 [backend 2/9] RUN mkdir -p /home/app/
#7 CACHED

#8 [backend 4/9] RUN npm install --global pm2 typescript
#8 CACHED

#9 [backend 5/9] COPY ./package*.json ./
#9 DONE 0.1s

#10 [backend 6/9] RUN npm install --frozen-lockfile
#10 27.55 
#10 27.55 added 325 packages, and audited 326 packages in 25s
#10 27.55 
#10 27.55 29 packages are looking for funding
#10 27.55   run `npm fund` for details
#10 27.60 
#10 27.60 5 vulnerabilities (3 moderate, 2 high)
#10 27.60 
#10 27.60 To address all issues, run:
#10 27.60   npm audit fix
#10 27.60 
#10 27.60 Run `npm audit` for details.
#10 27.60 npm notice 
#10 27.61 npm notice New major version of npm available! 8.19.4 -> 9.8.0
#10 27.61 npm notice Changelog: <https://github.com/npm/cli/releases/tag/v9.8.0>
#10 27.61 npm notice Run `npm install -g npm@9.8.0` to update!
#10 27.61 npm notice 
#10 DONE 27.7s

#11 [backend 7/9] COPY ./ ./
#11 DONE 0.4s

#12 [backend 8/9] RUN npm run database
#12 1.619 
#12 1.619 > habits-backend@1.0.0 database
#12 1.619 > npx prisma generate && prisma migrate deploy
#12 1.619 
#12 9.729 Environment variables loaded from .env
#12 9.837 Prisma schema loaded from prisma/schema.prisma
#12 11.84 
#12 11.84 ‚úî Generated Prisma Client (4.11.0 | library) to ./node_modules/@prisma/client in 290ms
#12 11.84 You can now start using Prisma Client in your code. Reference: https://pris.ly/d/client
#12 11.84 ```
#12 11.84 import { PrismaClient } from '@prisma/client'
#12 11.84 const prisma = new PrismaClient()
#12 11.84 ```
#12 17.61 Environment variables loaded from .env
#12 17.63 Prisma schema loaded from prisma/schema.prisma
#12 17.66 Datasource "db": SQLite database "data.db" at "file:./data.db"
#12 18.22 
#12 18.22 SQLite database data.db created at file:./data.db
#12 18.25 
#12 18.25 1 migration found in prisma/migrations
#12 18.25 
#12 18.26 Applying migration `20230620230531_init`
#12 18.27 
#12 18.27 The following migration have been applied:
#12 18.27 
#12 18.27 migrations/
#12 18.27   ‚îî‚îÄ 20230620230531_init/
#12 18.27     ‚îî‚îÄ migration.sql
#12 18.27       
#12 18.27 All migrations have been successfully applied.
#12 18.37 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
#12 18.37 ‚îÇ  Update available 4.11.0 -> 5.0.0                       ‚îÇ
#12 18.37 ‚îÇ                                                         ‚îÇ
#12 18.37 ‚îÇ  This is a major update - please follow the guide at    ‚îÇ
#12 18.37 ‚îÇ  https://pris.ly/d/major-version-upgrade                ‚îÇ
#12 18.37 ‚îÇ                                                         ‚îÇ
#12 18.37 ‚îÇ  Run the following to update                            ‚îÇ
#12 18.37 ‚îÇ    npm i --save-dev prisma@latest                       ‚îÇ
#12 18.37 ‚îÇ    npm i @prisma/client@latest                          ‚îÇ
#12 18.37 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
#12 DONE 18.5s

#13 [backend 9/9] RUN npm run build
#13 1.553 
#13 1.553 > habits-backend@1.0.0 build
#13 1.553 > tsc && npx tsc-alias
#13 1.553 
#13 DONE 15.3s

#14 [backend] exporting to image
#14 exporting layers
#14 exporting layers 6.1s done
#14 writing image sha256:74f477fa3e449600524676681aff13af68f50ba0661608bed9b0c0bc7483c0f5
#14 writing image sha256:74f477fa3e449600524676681aff13af68f50ba0661608bed9b0c0bc7483c0f5 done
#14 naming to docker.io/library/app-backend done
#14 DONE 6.2s

#15 [frontend internal] load .dockerignore
#15 transferring context: 2B 0.0s done
#15 DONE 0.0s

#16 [frontend internal] load build definition from Dockerfile
#16 transferring dockerfile: 790B 0.0s done
#16 DONE 0.1s

#3 [frontend internal] load metadata for docker.io/library/node:16-alpine
#3 DONE 1.1s

#4 [frontend 1/8] FROM docker.io/library/node:16-alpine@sha256:6c381d5dc2a11dcdb693f0301e8587e43f440c90cdb8933eaaaabb905d44cdb9
#4 DONE 0.0s

#17 [frontend internal] load build context
#17 transferring context: 2.23MB 4.1s
#17 transferring context: 2.69MB 4.6s done
#17 DONE 5.2s

#18 [frontend 2/8] RUN mkdir /home/app && chown -R node:node /home/app
#18 CACHED

#19 [frontend 3/8] WORKDIR /home/app
#19 CACHED

#20 [frontend 4/8] RUN npm install --global pm2
#20 CACHED

#21 [frontend 5/8] COPY --chown=node:node ./package*.json ./
#21 CACHED

#22 [frontend 6/8] RUN npm install --frozen-lockfile
#22 CACHED

#23 [frontend 7/8] COPY --chown=node:node ./ ./
#23 CACHED

#24 [frontend 8/8] RUN npm run build
#24 CACHED

#25 [frontend] exporting to image
#25 exporting layers done
#25 writing image sha256:91d6d18335dedc9f08bcb15429e2d6c9554efd577dbbb270ffaa23b8d5644a50 0.0s done
#25 naming to docker.io/library/app-frontend done
#25 DONE 0.0s

#26 [nginx internal] load .dockerignore
#26 transferring context: 2B 0.0s done
#26 DONE 0.0s

#27 [nginx internal] load build definition from Dockerfile
#27 transferring dockerfile: 377B 0.1s done
#27 DONE 0.1s

#28 [nginx internal] load metadata for docker.io/library/nginx:alpine
#28 DONE 0.7s

#29 [nginx 1/3] FROM docker.io/library/nginx:alpine@sha256:2d194184b067db3598771b4cf326cfe6ad5051937ba1132b8b7d4b0184e0d0a6
#29 DONE 0.0s

#30 [nginx internal] load build context
#30 transferring context: 1.54kB done
#30 DONE 0.0s

#31 [nginx 2/3] RUN rm /etc/nginx/conf.d/*
#31 CACHED

#32 [nginx 3/3] COPY ./default.conf /etc/nginx/conf.d/
#32 CACHED

#33 [nginx] exporting to image
#33 exporting layers done
#33 writing image sha256:92f035316060b590290bde187bc4632fd22ab73a26c430f58a27dde3bd10591e done
#33 naming to docker.io/library/app-nginx done
#33 DONE 0.0s
 Network app_default  Creating
 Network app_default  Created
 Container app-backend-1  Creating
 Container app-backend-1  Created
 Container app-frontend-1  Creating
 Container app-frontend-1  Created
 Container app-nginx-1  Creating
 Container app-nginx-1  Created
Attaching to app-backend-1, app-frontend-1, app-nginx-1
app-nginx-1     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
app-nginx-1     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
app-nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
app-nginx-1     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
app-nginx-1     | 10-listen-on-ipv6-by-default.sh: info: /etc/nginx/conf.d/default.conf differs from the packaged version
app-nginx-1     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
app-nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
app-nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
app-nginx-1     | /docker-entrypoint.sh: Configuration complete; ready for start up
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: using the "epoll" event method
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: nginx/1.25.1
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: built by gcc 12.2.1 20220924 (Alpine 12.2.1_git20220924-r4) 
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: OS: Linux 5.15.0-76-generic
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: start worker processes
app-nginx-1     | 2023/07/14 15:48:51 [notice] 1#1: start worker process 29
app-backend-1   | 2023-07-14T15:48:51: PM2 log: Launching in no daemon mode
app-backend-1   | 2023-07-14T15:48:51: PM2 log: App [npm:0] starting in -fork mode-
app-backend-1   | 2023-07-14T15:48:51: PM2 log: App [npm:0] online
app-frontend-1  | 2023-07-14T15:48:52: PM2 log: Launching in no daemon mode
app-frontend-1  | 2023-07-14T15:48:52: PM2 log: App [npm:0] starting in -fork mode-
app-frontend-1  | 2023-07-14T15:48:52: PM2 log: App [npm:0] online
app-backend-1   | > habits-backend@1.0.0 start
app-backend-1   | > node dist/src/server.js
app-frontend-1  | > frontend@0.1.0 start
app-frontend-1  | > next start
app-frontend-1  | ready - started server on 0.0.0.0:3001, url: http://localhost:3001
app-frontend-1  | info  - Loaded env from /home/app/.env
app-frontend-1  | warn  - You have enabled experimental feature (appDir) in next.config.js.
app-frontend-1  | warn  - Experimental features are not covered by semver, and may cause unexpected or broken application behavior. Use at your own risk.
app-frontend-1  | info  - Thank you for testing `appDir` please leave your feedback at https://nextjs.link/app-feedback
app-backend-1   | üöÄ Server ready at: http://localhost:3000
app-backend-1   | ‚≠êÔ∏è See sample requests: http://pris.ly/e/ts/rest-express#3-using-the-rest-api
Gracefully stopping... (press Ctrl+C again to force)
Aborting on container exit...
 Container app-nginx-1  Stopping
 Container app-nginx-1  Stopped
 Container app-frontend-1  Stopping
 Container app-backend-1  Killing
 Container app-frontend-1  Killing
 Container app-frontend-1  Stopped
 Container app-backend-1  Stopping
 Container app-frontend-1  Error while Killing
 Container app-backend-1  Error while Killing
time="2023-07-14T15:49:19Z" level=error msg="got 3 SIGTERM/SIGINTs, forcing shutdown"
 Container app-backend-1  Stopped
canceled
